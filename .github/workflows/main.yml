name: BuildAndRunStuff

on:
  pull_request:
  push:
    branches: [ 'main', 'beta' ]

  workflow_dispatch:
    inputs:
      extra_flags:
        description: "Extra flags to pass to bazel"
        default: ''
        required: false

jobs:
  build-with-bazel:
    name: ${{matrix.cfg.name}}

    runs-on: ${{matrix.cfg.os}}

    strategy:
      matrix:
        cfg:
          - { name: 'Linux GCC',             output: 'linux_gcc_libstdcxx',  os: 'ubuntu-22.04', cc: 'g++',     flags: }
          - { name: 'Linux LLVM/libstdc++',  output: 'linux_llvm_libstdcxx', os: 'ubuntu-22.04', cc: 'clang++', flags: }
          - { name: 'Linux LLVM/libc++',     output: 'linux_llvm_libcxx',    os: 'ubuntu-22.04', cc: 'clang++', flags: '--config=libc++' }
          - { name: 'MacOS 12 LLVM/libc++',  output: 'macos_llvm_libcxx',    os: 'macos-12',     cc: 'clang++', flags: '--linkopt=-Wl,-no_fixup_chains' }
          - { name: 'MacOS 13 LLVM/libc++',  output: 'macos_llvm_libcxx',    os: 'macos-13',     cc: 'clang++', flags: '--linkopt=-Wl,-no_fixup_chains' }

    env:
      CC: ${{matrix.cfg.cc}}
      BAZEL_USE_CPP_ONLY_TOOLCHAIN: 1

    steps:
      - name: check out repository
        uses: actions/checkout@v2

      - name: install infrastructure (Linux)
        if: matrix.cfg.os == 'ubuntu-22.04'
        run: sudo ln -s /usr/lib/llvm-10/include/c++/v1 /usr/include/c++/v1

      - name: build
        run: bazel build                     --show_result=100 -c opt --dynamic_mode=off ${{matrix.cfg.flags}} ${{github.event.inputs.extra_flags}} //...

      - name: test
        run: bazel test --test_output=errors --show_result=100 -c opt --dynamic_mode=off ${{matrix.cfg.flags}} ${{github.event.inputs.extra_flags}} //...

      - name: run (Linux)
        if: matrix.cfg.os == 'ubuntu-22.04'
        run: |
          file bazel-bin/sandbox/dso_loader bazel-bin/sandbox/dso_demo.so
          ldd bazel-bin/sandbox/show_args bazel-bin/sandbox/dso_loader bazel-bin/sandbox/dso_test bazel-bin/sandbox/dso_demo.so
          bazel-bin/sandbox/show_args foo bar quz
          bazel-bin/sandbox/dso_loader bazel-bin/sandbox/dso_demo.so

      - name: run (MacOS)
        if: matrix.cfg.os == 'macos-12' || matrix.cfg.os == 'macos-13'
        run: |
          file bazel-bin/sandbox/dso_loader bazel-bin/sandbox/dso_demo.so
          otool -L -H bazel-bin/sandbox/show_args bazel-bin/sandbox/dso_loader bazel-bin/sandbox/dso_test bazel-bin/sandbox/dso_demo.so
          bazel-bin/sandbox/show_args foo bar quz
          bazel-bin/sandbox/dso_loader bazel-bin/sandbox/dso_demo.so

      - name: make tarball
        run: tar cf output-${{matrix.cfg.output}}.tar -C bazel-bin/sandbox dso_demo.so dso_loader dso_test show_args

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build_outputs.zip
          path: output-${{matrix.cfg.output}}.tar
